{"version":3,"sources":["assets/logo.png","utils/routes.js","pages/Register/Register.jsx","pages/Login/Login.jsx","components/LogOut/LogOut.jsx","components/ChatInput/ChatInput.jsx","components/Message/Message.jsx","components/ChatContainer/ChatContainer.jsx","components/Contact/Contacts.jsx","assets/robot.png","components/Welcome/Welcome.jsx","pages/Chat/Chat.jsx","assets/loader.png","pages/Avatar/SetAvatar.jsx","assets/user.jpg","components/Dashboard/Dashboard.jsx","App.js","index.js"],"names":["host","RegisterRoute","LoginRoute","setAvatarRoute","getAvatarRoute","getAllUsersRoute","sendMessageRoute","getAllMessagesRoute","updateUserRoute","deleteUserRoute","Register","useState","username","email","password","confirmPassword","values","setValues","error","setError","message","navigate","useNavigate","useEffect","JSON","parse","localStorage","getItem","handleValidation","length","handleSubmit","e","a","preventDefault","valid","fetch","method","headers","body","stringify","res","json","resData","success","setItem","user","handleChange","target","name","value","className","onSubmit","src","Logo","alt","type","placeholder","onChange","to","Login","notice","setNotice","setTimeout","undefined","isAvatarImageSet","LogOut","title","Button","onClick","removeItem","styled","button","ChatInput","handleSendMessage","showEmojiPicker","setShowEmojiPicker","msg","setMsg","image","setImage","setImageType","imageSize","setImageSize","sendChat","Container","onEmojiClick","emoji","accept","style","width","height","display","imageFile","files","size","toFixed","fileReader","FileReader","onloadend","this","result","readAsDataURL","handleFileChange","div","Message","ChatContainer","currentChat","currentUser","socket","messages","setMessages","arrivalmessage","setArrivalMessage","showLargeImage","setShowLargeImage","largeImage","setLargeImage","scrollRef","useRef","getAllMessages","usersData","_id","from","chatData","alert","isFile","current","emit","msgs","push","fromSelf","on","prev","scrollIntoView","behaviour","avatarImage","map","index","ref","handleImageClick","Contacts","contacts","changeChat","currentUsername","setCurrentUsername","currentUserImage","setCurrentUserImage","currentSelected","setCurrentSelected","contact","changeCurrentChat","textDecoration","color","Welcome","RobotImage","Chat","setContacts","setCurrentUser","setCurrentChat","getallUsers","io","id","allUsers","handleChatChange","chat","SetAvatar","api","avatars","setAvatars","isLoading","setIsLoading","selectedAvatar","setSelectedAvatar","fetchAvatars","setProfilePicture","console","log","Loader","avatar","Dashboard","setMessage","formRef","useParams","labelRef","usernameRef","firstname","lastname","phone","oldPassword","background","backgroundSize","profile","file","passportLabel","document","querySelector","updateUser","data","handleInputChange","updateUserPassword","userId","deleteUser","window","confirm","variant","htmlFor","autoComplete","disabled","readOnly","defaultValue","fullWidth","position","backgroundColor","fontSize","App","path","element","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a0b37f26.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.c4fc47fc.png\";","export const host = \"http://192.168.0.100:8080\";\r\nexport const RegisterRoute = `${host}/api/register`;\r\nexport const LoginRoute = `${host}/api/login`;\r\nexport const setAvatarRoute = `${host}/api/set-avatar`;\r\nexport const getAvatarRoute = `${host}/api/avatars`;\r\nexport const getAllUsersRoute = `${host}/api/allusers`;\r\nexport const sendMessageRoute = `${host}/api/add-message`;\r\nexport const getAllMessagesRoute = `${host}/api/get-messages`;\r\nexport const updateUserRoute = `${host}/api/update-user`;\r\nexport const deleteUserRoute = `${host}/api/delete-user`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Register.css\";\r\nimport Logo from \"../../assets/logo.png\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { RegisterRoute } from \"../../utils/routes\";\r\nfunction Register() {\r\n  // State Management\r\n  const [values, setValues] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [error, setError] = useState(null);\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // UseEffect\r\n  useEffect(() => {\r\n    if (JSON.parse(localStorage.getItem(\"chatUser\"))) {\r\n      navigate(\"/avatar\");\r\n    }\r\n  }, []);\r\n\r\n  const handleValidation = () => {\r\n    const { password, confirmPassword, email, username } = values;\r\n    if (!username || username.length < 3) {\r\n      setError(\"Username should be greater than 3 characters!\");\r\n      return false;\r\n    } else if (!email) {\r\n      setError(\"Email Field is Required\");\r\n      return false;\r\n    } else if (password.length < 6) {\r\n      setError(\"Password should be more than 6 charcters long!\");\r\n      return false;\r\n    } else if (password !== confirmPassword) {\r\n      setError(\"Password and Confirm Password should be the same!\");\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const valid = handleValidation();\r\n    if (!valid) return;\r\n    if (valid) {\r\n      setError(null);\r\n    }\r\n\r\n    const res = await fetch(RegisterRoute, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(values),\r\n    });\r\n\r\n    const resData = await res.json();\r\n\r\n    if (resData.success) {\r\n      localStorage.setItem(\"chatUser\", JSON.stringify(resData.user));\r\n      navigate(\"/login\");\r\n    } else {\r\n      setError(resData.message);\r\n    }\r\n  };\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div className='form-container'>\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        <div className='brand'>\r\n          <img src={Logo} alt='Logo' />\r\n          <h1>OcaChat</h1>\r\n        </div>\r\n        {message && <div className='message'>{message}</div>}{\" \"}\r\n        <input\r\n          type='text'\r\n          placeholder='Username'\r\n          name='username'\r\n          onChange={(e) => handleChange(e)}\r\n        />\r\n        <input\r\n          type='email'\r\n          placeholder='Email'\r\n          name='email'\r\n          onChange={(e) => handleChange(e)}\r\n        />\r\n        <input\r\n          type='password'\r\n          placeholder='Password'\r\n          name='password'\r\n          onChange={(e) => handleChange(e)}\r\n        />\r\n        <input\r\n          type='password'\r\n          placeholder='Confirm Password'\r\n          name='confirmPassword'\r\n          onChange={(e) => handleChange(e)}\r\n        />\r\n        <button type='submit'>Create User</button>\r\n        <span>\r\n          Already have an Account? <Link to='/login'>Log In</Link>\r\n        </span>\r\n      </form>\r\n\r\n      {error && <div className='error'>{error}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Login.css\";\r\nimport Logo from \"../../assets/logo.png\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { LoginRoute } from \"../../utils/routes\";\r\n\r\nfunction Login({ notice, setNotice }) {\r\n  // State Management\r\n  const [values, setValues] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const [error, setError] = useState(null);\r\n  const [message, setMessage] = useState(null);\r\n  const [pyAvatars, setPyAvatars] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (notice) {\r\n      setTimeout(() => setNotice(undefined), 5000);\r\n    }\r\n  }, [notice]);\r\n\r\n  // UseEffect\r\n  useEffect(() => {\r\n    if (JSON.parse(localStorage.getItem(\"chatUser\"))) {\r\n      const user = JSON.parse(localStorage.getItem(\"chatUser\"));\r\n      if (!user.isAvatarImageSet) return navigate(\"/avatar\");\r\n      return navigate(\"/\");\r\n    }\r\n  }, []);\r\n\r\n  const handleValidation = () => {\r\n    const { password, username } = values;\r\n    if (!username || !password) {\r\n      setError(\"Username and password is required\");\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const valid = handleValidation();\r\n    if (!valid) return;\r\n    if (valid) {\r\n      setError(null);\r\n    }\r\n\r\n    const res = await fetch(LoginRoute, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(values),\r\n    });\r\n\r\n    const resData = await res.json();\r\n\r\n    if (resData.success) {\r\n      localStorage.setItem(\"chatUser\", JSON.stringify(resData.user));\r\n      if (resData.user.isAvatarImageSet) {\r\n        navigate(\"/\");\r\n      } else {\r\n        navigate(\"/avatar\");\r\n      }\r\n    } else {\r\n      setError(resData.message);\r\n    }\r\n  };\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const getMessage = async () => {\r\n    if (!values.username || !values.password)\r\n      return alert(\"Username and password required\");\r\n\r\n    const result = await window.eel.sendMessage(values)();\r\n    if (result.success) {\r\n      setPyAvatars(result.avatars);\r\n    } else {\r\n      alert(\"Username or password Incorrect\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='form-container'>\r\n      {/* {pyAvatars.length && (\r\n        <div className='avatars-container'>\r\n          {pyAvatars.map((avatar, index) => (\r\n            <div className='avatar' key={index}>\r\n              <img src={avatar} alt='Avatar' onClick={() => setPyAvatars([])} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )} */}\r\n\r\n      {notice && (\r\n        <div className='notice'>\r\n          <h2>{notice}</h2>\r\n        </div>\r\n      )}\r\n\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        <div className='brand'>\r\n          <img src={Logo} alt='Logo' />\r\n          <h1>OcaChat</h1>\r\n        </div>\r\n        {message && <div className='message'>{message}</div>}{\" \"}\r\n        <input\r\n          type='text'\r\n          placeholder='Username'\r\n          name='username'\r\n          onChange={(e) => handleChange(e)}\r\n        />\r\n        <input\r\n          type='password'\r\n          placeholder='Password'\r\n          name='password'\r\n          onChange={(e) => handleChange(e)}\r\n        />\r\n        <button type='submit'>Log In</button>\r\n        {/* <button type='button' onClick={() => getMessage()}>\r\n          Get Avatars\r\n        </button> */}\r\n        <span>\r\n          Don't have an Account? <Link to='/register'>Register </Link>\r\n        </span>\r\n      </form>\r\n\r\n      {error && <div className='error'>{error}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"./LogOut.css\";\r\nimport styled from \"styled-components\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport PowerOff from \"@mui/icons-material/PowerSettingsNew\";\r\nfunction LogOut({ title }) {\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogOut = () => {\r\n    localStorage.removeItem(\"chatUser\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <Button onClick={handleLogOut} title={title}>\r\n      <PowerOff />\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default LogOut;\r\n\r\nconst Button = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0.5rem;\r\n  border-radius: 0.5rem;\r\n  background-color: red;\r\n  border: none;\r\n  cursor: pointer;\r\n  svg {\r\n    font-size: 1.3rem;\r\n    color: #ebe7ff;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport \"./ChatInput.css\";\r\nimport styled from \"styled-components\";\r\nimport Picker from \"emoji-picker-react\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport EmojiIcon from \"@mui/icons-material/EmojiEmotions\";\r\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\r\n\r\nfunction ChatInput({ handleSendMessage }) {\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [image, setImage] = useState(undefined);\r\n  const [imageType, setImageType] = useState(undefined);\r\n  const [imageSize, setImageSize] = useState(undefined);\r\n  const showHideEmojiPicker = () => {\r\n    setShowEmojiPicker(!showEmojiPicker);\r\n  };\r\n\r\n  const handleEmojiClick = (e, emoji) => {\r\n    let message = msg;\r\n    message += emoji.emoji;\r\n    setMsg(message);\r\n    setShowEmojiPicker(false);\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    let imageFile = e.target.files[0];\r\n    setImageSize((imageFile.size / 1024 / 1024).toFixed(2));\r\n    setImageType(imageFile.type);\r\n    const fileReader = new FileReader();\r\n    fileReader.onloadend = function () {\r\n      setImage(this.result);\r\n    };\r\n    setMsg(imageFile.name);\r\n    fileReader.readAsDataURL(imageFile);\r\n  };\r\n\r\n  const sendChat = async (e) => {\r\n    e.preventDefault();\r\n    if (!msg) return;\r\n\r\n    await handleSendMessage(msg, image, imageSize);\r\n    setMsg(\"\");\r\n    setImage(undefined);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div className='button-container'>\r\n        <div className='emoji'>\r\n          <EmojiIcon onClick={showHideEmojiPicker} />\r\n          {showEmojiPicker && <Picker onEmojiClick={handleEmojiClick} />}\r\n          <label>\r\n            <input\r\n              type='file'\r\n              accept='image/png, image/jpeg, image/jpg'\r\n              style={{ width: 0, height: 0, display: \"none\" }}\r\n              onChange={(e) => handleFileChange(e)}\r\n            />\r\n            <AttachFileIcon />\r\n          </label>{\" \"}\r\n        </div>\r\n      </div>\r\n      <form className='input-container'>\r\n        <input\r\n          type='text'\r\n          placeholder='Type your message here'\r\n          onChange={(e) => setMsg(e.target.value)}\r\n          value={msg}\r\n        />\r\n        <button className='submit' onClick={sendChat}>\r\n          <SendIcon />\r\n        </button>\r\n      </form>\r\n      {/* \r\n      <h2>\r\n        <SendIcon />\r\n      </h2> */}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ChatInput;\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 5% 95%;\r\n  align-items: center;\r\n  background-color: #080420;\r\n  padding: 0 2rem;\r\n  padding-bottom: 0.3rem;\r\n\r\n  @media screen and (min-width: 720px) and (max-width: 1000px) {\r\n    padding: 0 1rem;\r\n    gap: 1rem;\r\n  }\r\n  .button-container {\r\n    display: flex;\r\n    align-items: center;\r\n    color: #fff;\r\n    gap: 1rem;\r\n    .emoji {\r\n      position: relative;\r\n      display: flex;\r\n      svg {\r\n        font-size: 1.5rem;\r\n        color: #ffff00c8;\r\n        cursor: pointer;\r\n      }\r\n\r\n      .emoji-picker-react {\r\n        position: absolute;\r\n        top: -350px;\r\n        background-color: #080420;\r\n        box-shadow: 0 5px 10px #9a86f3;\r\n        border-color: #9186f3;\r\n        .emoji-scroll-wrapper::-webkit-scrollbar {\r\n          background-color: #080420;\r\n          width: 5px;\r\n          &-thumb {\r\n            background-color: #9186f3;\r\n          }\r\n        }\r\n\r\n        .emoji-categories {\r\n          button {\r\n            filter: contrast(0);\r\n          }\r\n        }\r\n        .emoji-search {\r\n          background: transparent;\r\n          border-color: #9186f3;\r\n        }\r\n\r\n        .emoji-group:before {\r\n          background-color: #080420;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .input-container {\r\n    background-color: #ffffff34;\r\n    width: 100%;\r\n    border-radius: 2rem;\r\n    display: flex;\r\n    align-content: center;\r\n    align-items: center;\r\n    gap: 2rem;\r\n    input {\r\n      width: 90%;\r\n      height: 60%;\r\n      background-color: transparent;\r\n      color: white;\r\n      border: none;\r\n      padding-left: 1rem;\r\n      font-size: 1.2rem;\r\n\r\n      &::selection {\r\n        background-color: #9a86f3;\r\n      }\r\n      &:focus {\r\n        outline: none;\r\n      }\r\n    }\r\n  }\r\n\r\n  button {\r\n    padding: 0.3rem 2rem;\r\n    border-radius: 2rem;\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: #9a86f3;\r\n    border: none;\r\n\r\n    @media screen and (min-width: 720px) and (max-width: 1000px) {\r\n      padding: 0.3rem 1rem;\r\n      svg {\r\n        font-size: 1rem;\r\n      }\r\n    }\r\n    svg {\r\n      font-size: 2rem;\r\n      color: white;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport \"./Message.css\";\r\nimport styled from \"styled-components\";\r\nfunction Message() {\r\n  return <Container>Message</Container>;\r\n}\r\n\r\nexport default Message;\r\n\r\nconst Container = styled.div`\r\n  height: 80%;\r\n`;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./ChatContainer.css\";\r\nimport styled from \"styled-components\";\r\nimport LogOut from \"../LogOut/LogOut\";\r\nimport ChatInput from \"../ChatInput/ChatInput\";\r\nimport Message from \"../Message/Message\";\r\nimport { getAllMessagesRoute, sendMessageRoute } from \"../../utils/routes\";\r\nimport { Button } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction ChatContainer({ currentChat, currentUser, socket }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [arrivalmessage, setArrivalMessage] = useState(undefined);\r\n  const [showLargeImage, setShowLargeImage] = useState(false);\r\n  const [largeImage, setLargeImage] = useState(undefined);\r\n\r\n  const scrollRef = useRef();\r\n  useEffect(() => {\r\n    if (currentChat) return getAllMessages();\r\n  }, [currentChat]);\r\n\r\n  const getAllMessages = async () => {\r\n    const usersData = {\r\n      to: currentChat._id,\r\n      from: currentUser._id,\r\n    };\r\n\r\n    const res = await fetch(getAllMessagesRoute, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(usersData),\r\n    });\r\n\r\n    const resData = await res.json();\r\n\r\n    if (resData.success) {\r\n      setMessages(resData.messages);\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = async (msg, image = null, imageSize) => {\r\n    let chatData = null;\r\n\r\n    if (image) {\r\n      if (imageSize > 4) return alert(\"Image Too Large\");\r\n      chatData = {\r\n        image,\r\n        message: \"image\",\r\n        isFile: true,\r\n        to: currentChat._id,\r\n        from: currentUser._id,\r\n      };\r\n    } else {\r\n      chatData = {\r\n        isFile: false,\r\n        message: msg,\r\n        to: currentChat._id,\r\n        from: currentUser._id,\r\n      };\r\n    }\r\n\r\n    const res = await fetch(sendMessageRoute, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(chatData),\r\n    });\r\n\r\n    const resData = await res.json();\r\n\r\n    if (resData.success) {\r\n      socket.current.emit(\"send-message\", chatData);\r\n\r\n      const msgs = [...messages];\r\n      const isFile = image ? true : false;\r\n      msgs.push({ fromSelf: true, message: msg, image, isFile });\r\n      setMessages(msgs);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (socket.current) {\r\n      socket.current.on(\"msg-receive\", ({ message, image, isFile }) => {\r\n        setArrivalMessage({ fromSelf: false, message, image, isFile });\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    arrivalmessage && setMessages((prev) => [...prev, arrivalmessage]);\r\n  }, [arrivalmessage]);\r\n\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behaviour: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  const handleImageClick = (e) => {\r\n    setLargeImage(e.target.src);\r\n    setShowLargeImage(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className='chats'>\r\n        <div className='chat-header'>\r\n          <div className='user-details'>\r\n            <div className='avatar'>\r\n              <img src={currentChat.avatarImage} alt='' />\r\n            </div>\r\n            <div className='username'>\r\n              <h3>{currentChat.username}</h3>\r\n            </div>\r\n          </div>\r\n\r\n          <LogOut />\r\n        </div>\r\n        {/* <Message /> */}\r\n        {showLargeImage && largeImage && (\r\n          <div className='overlay' onClick={(e) => setShowLargeImage(false)}>\r\n            <div className='large-image-container'>\r\n              <img src={largeImage} alt='Large Image' />\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className='chat-messages'>\r\n          {messages.map((message, index) => {\r\n            return (\r\n              <div ref={scrollRef} key={index}>\r\n                <div\r\n                  className={`message ${\r\n                    message.fromSelf ? \"sended\" : \"received\"\r\n                  }`}\r\n                >\r\n                  {message.isFile ? (\r\n                    <div\r\n                      className={`image-container ${\r\n                        message.fromSelf ? \"my-image\" : \"\"\r\n                      }`}\r\n                    >\r\n                      <img\r\n                        src={message.image}\r\n                        alt={message.message}\r\n                        onClick={(e) => handleImageClick(e)}\r\n                      />\r\n                    </div>\r\n                  ) : (\r\n                    message.message !== \"image\" && (\r\n                      <div className='content'>\r\n                        <p>{message.message}</p>\r\n                      </div>\r\n                    )\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <ChatInput handleSendMessage={handleSendMessage} />{\" \"}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChatContainer;\r\n\r\nconst Container = styled.div`\r\n  padding-top: 1rem;\r\n  display: grid;\r\n  grid-template-rows: 10% 78% 12%;\r\n  gap: 0.1rem;\r\n  overflow: hidden;\r\n\r\n  @media screen and (min-width: 720px) and (max-width: 1000px) {\r\n    grid-template-rows: 15% 70% 15%;\r\n  }\r\n\r\n  .chat-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 2rem;\r\n    .user-details {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 1rem;\r\n      .avatar {\r\n        img {\r\n          height: 3rem;\r\n        }\r\n      }\r\n      .username {\r\n        h3 {\r\n          color: black;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .chat-messages {\r\n    padding: 1rem 2rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n    overflow: auto;\r\n    &::-webkit-scrollbar {\r\n      width: 0.2rem;\r\n      &-thumb {\r\n        background-color: #ffffff39;\r\n        width: 0.1rem;\r\n        border-radius: 1rem;\r\n      }\r\n    }\r\n    .message {\r\n      display: flex;\r\n      align-items: center;\r\n      .content {\r\n        max-width: 50%;\r\n        overflow-wrap: break-word;\r\n        padding: 1rem;\r\n        font-size: 1.1rem;\r\n        border-radius: 1rem;\r\n        color: white;\r\n      }\r\n\r\n      .image-container {\r\n        width: 100px;\r\n        img {\r\n          width: 100%;\r\n        }\r\n      }\r\n      .my-image {\r\n        justify-content: flex-end;\r\n      }\r\n    }\r\n    .sended {\r\n      justify-content: flex-end;\r\n      .content {\r\n        background-color: #4f04ff21;\r\n        background-color: green;\r\n      }\r\n    }\r\n    .received {\r\n      justify-content: flex-start;\r\n      .content {\r\n        background-color: #9900ff20;\r\n        background-color: rgb(0, 183, 255);\r\n      }\r\n    }\r\n  }\r\n\r\n  .overlay {\r\n    position: fixed;\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    z-index: 200;\r\n    padding: 20px;\r\n  }\r\n\r\n  .large-image-container {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background-color: inherit;\r\n    padding: 10px;\r\n    border-radius: 6px;\r\n    z-index: 200;\r\n    margin: auto;\r\n    max-width: 100%;\r\n\r\n    img {\r\n      display: block;\r\n      margin: auto;\r\n      object-fit: contain;\r\n      width: 100%;\r\n      max-height: 800px;\r\n      border-radius: 6px;\r\n    }\r\n  }\r\n`;\r\n","import { Button } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Logo from \"../../assets/logo.png\";\r\nimport \"./Contacts.css\";\r\nfunction Contacts({ contacts, currentUser, changeChat }) {\r\n  const [currentUsername, setCurrentUsername] = useState(undefined);\r\n  const [currentUserImage, setCurrentUserImage] = useState(undefined);\r\n  const [currentSelected, setCurrentSelected] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setCurrentUserImage(currentUser.avatarImage);\r\n      setCurrentUsername(currentUser.username);\r\n    }\r\n  }, [currentUser]);\r\n\r\n  const changeCurrentChat = (index, contact) => {\r\n    setCurrentSelected(index);\r\n    changeChat(contact);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {currentUser && currentUsername && (\r\n        <Container>\r\n          <div className='brand'>\r\n            <img src={Logo} alt='Logo' />\r\n            <h3>OcaChat</h3>\r\n          </div>\r\n\r\n          <div className='contacts'>\r\n            {contacts.map((contact, index) => {\r\n              return (\r\n                <div\r\n                  className={`contact ${\r\n                    index === currentSelected ? \"selected\" : \"\"\r\n                  }`}\r\n                  key={index}\r\n                  onClick={() => changeCurrentChat(index, contact)}\r\n                >\r\n                  <div className='avatar'>\r\n                    <img src={contact.avatarImage} alt='Avatar' />\r\n                  </div>\r\n                  <div className='username'>\r\n                    <h3>{contact.username}</h3>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          <div className='current-user'>\r\n            <div className='avatar'>\r\n              <img src={currentUserImage} alt='Avatar' />\r\n            </div>\r\n            <div className='username'>\r\n              <h2>{currentUsername}</h2>\r\n              <Link\r\n                to={`/dashboard`}\r\n                style={{\r\n                  textDecoration: \"none\",\r\n                  color: \"rgba(255, 255, 255, 0.6)\",\r\n                }}\r\n              >\r\n                Account Setting\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Contacts;\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 10% 75% 15%;\r\n  overflow: hidden;\r\n  background-color: #080420;\r\n\r\n  .brand {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 1rem;\r\n    img {\r\n      height: 2rem;\r\n    }\r\n    h3 {\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  .contacts {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    overflow: auto;\r\n    gab: 0.8rem;\r\n    &::-webkit-scrollbar {\r\n      width: 0.2rem;\r\n      &-thumb {\r\n        background-color: #ffffff39;\r\n        width: 0.1rem;\r\n        border-radius: 1rem;\r\n      }\r\n    }\r\n    .contact {\r\n      display: flex;\r\n      background-color: #ffffff39;\r\n      min-height: 5rem;\r\n      width: 90%;\r\n      cursor: pointer;\r\n      border-radius: 0.2rem;\r\n      padding: 0.4rem;\r\n      gap: 1rem;\r\n      align-items: center;\r\n      transition: 0.5s ease-in-out;\r\n      margin-bottom: 5px;\r\n      .avatar {\r\n        img {\r\n          height: 3rem;\r\n        }\r\n      }\r\n\r\n      .username {\r\n        h3 {\r\n          color: #fff;\r\n        }\r\n      }\r\n    }\r\n\r\n    .selected {\r\n      background-color: #9186f3;\r\n    }\r\n  }\r\n\r\n  .current-user {\r\n    background-color: #0d0d30;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 2rem;\r\n    .avatar {\r\n      img {\r\n        height: 4rem;\r\n        width: 4rem;\r\n        border-radius: 50%;\r\n        max-inline-size: 100%;\r\n      }\r\n    }\r\n    .username {\r\n      h2 {\r\n        color: #fff;\r\n      }\r\n    }\r\n\r\n    @media screen and (min-width: 720px) and (max-width: 1000px) {\r\n      gap: 0.5rem;\r\n      .username {\r\n        h2 {\r\n          font-size: 1rem;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/robot.67ed14c8.png\";","import React from \"react\";\r\nimport \"./Welcome.css\";\r\n\r\nimport styled from \"styled-components\";\r\nimport RobotImage from \"../../assets/robot.png\";\r\n\r\nfunction Welcome({ currentUser }) {\r\n  return (\r\n    <Container>\r\n      <img src={RobotImage} alt='Robot' />\r\n\r\n      <h1>\r\n        Welcome, <span>{currentUser?.username}!</span>\r\n      </h1>\r\n      <h3>Please select a chat to start messaging</h3>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Welcome;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  color: black;\r\n  img {\r\n    height: 20rem;\r\n  }\r\n  span {\r\n    color: darkcyan;\r\n  }\r\n`;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ChatContainer from \"../../components/ChatContainer/ChatContainer\";\r\nimport Contacts from \"../../components/Contact/Contacts\";\r\nimport Welcome from \"../../components/Welcome/Welcome\";\r\nimport { getAllUsersRoute, host } from \"../../utils/routes\";\r\nimport \"./Chat.css\";\r\n\r\nimport io from \"socket.io-client\";\r\n\r\n// const sockect = io(\"http://localhost:8080\");\r\n\r\nfunction Chat() {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [currentUser, setCurrentUser] = useState(undefined);\r\n  const [currentChat, setCurrentChat] = useState(undefined);\r\n\r\n  const socket = useRef();\r\n\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    if (!JSON.parse(localStorage.getItem(\"chatUser\"))) {\r\n      navigate(\"/login\");\r\n    } else {\r\n      setCurrentUser(JSON.parse(localStorage.getItem(\"chatUser\")));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getallUsers();\r\n\r\n    if (currentUser) {\r\n      socket.current = io(host);\r\n      socket.current.emit(\"add-user\", currentUser._id);\r\n    }\r\n  }, [currentUser]);\r\n\r\n  const getallUsers = async (id) => {\r\n    if (currentUser) {\r\n      if (currentUser.isAvatarImageSet) {\r\n        const res = await fetch(`${getAllUsersRoute}/${currentUser._id}`);\r\n        const resData = await res.json();\r\n        if (resData.success) {\r\n          setContacts(resData.allUsers);\r\n        } else {\r\n          navigate(\"/avatar\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChatChange = async (chat) => {\r\n    setCurrentChat(chat);\r\n  };\r\n\r\n  return (\r\n    <div className='chat-container'>\r\n      <div className='content-container'>\r\n        <Contacts\r\n          contacts={contacts}\r\n          currentUser={currentUser}\r\n          changeChat={handleChatChange}\r\n        />\r\n        {!currentChat ? (\r\n          <Welcome currentUser={currentUser} />\r\n        ) : (\r\n          <ChatContainer\r\n            currentChat={currentChat}\r\n            currentUser={currentUser}\r\n            socket={socket}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","export default __webpack_public_path__ + \"static/media/loader.a8c3a5a5.png\";","import React, { useState, useEffect } from \"react\";\r\nimport \"./SetAvatar.css\";\r\nimport Loader from \"../../assets/loader.png\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getAvatarRoute, setAvatarRoute } from \"../../utils/routes\";\r\n\r\nfunction SetAvatar() {\r\n  const api = getAvatarRoute;\r\n  const navigate = useNavigate();\r\n  const [avatars, setAvatars] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selectedAvatar, setSelectedAvatar] = useState(undefined);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetchAvatars();\r\n  }, []);\r\n\r\n  const fetchAvatars = async () => {\r\n    const res = await fetch(api);\r\n    const resData = await res.json();\r\n    if (resData.success) {\r\n      setAvatars(resData.avatars);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!JSON.parse(localStorage.getItem(\"chatUser\"))) {\r\n      navigate(\"/login\");\r\n    }\r\n  }, []);\r\n\r\n  const setProfilePicture = async () => {\r\n    if (!selectedAvatar) return setError(\"Please Select Avatar and Try Again\");\r\n\r\n    const user = JSON.parse(localStorage.getItem(\"chatUser\")) || null;\r\n\r\n    const res = await fetch(setAvatarRoute, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        id: user._id,\r\n        avatarImage: avatars[selectedAvatar],\r\n      }),\r\n    });\r\n    const resData = await res.json();\r\n    console.log(resData);\r\n    if (resData.success) {\r\n      user.isAvatarImageSet = resData.success;\r\n      user.avatarImage = resData.image;\r\n      localStorage.setItem(\"chatUser\", JSON.stringify(user));\r\n      navigate(\"/\");\r\n    } else {\r\n      setError(\"Internal Server Error!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <div className='avatar-container'>\r\n          <img src={Loader} alt='loader' className='loader' />\r\n        </div>\r\n      ) : (\r\n        <div className='avatar-container'>\r\n          {error && <div className='error'>{error}</div>}\r\n          <div className='title-container'>\r\n            <h1>Pick an Avatar as your profle picture</h1>\r\n            <div className='avatars'>\r\n              {avatars.map((avatar, index) => (\r\n                <div\r\n                  className={`avatar ${\r\n                    selectedAvatar === index ? \"selected\" : \"\"\r\n                  }`}\r\n                  key={index}\r\n                  onClick={() => setSelectedAvatar(index)}\r\n                >\r\n                  <img src={avatar} alt='Avatar' />{\" \"}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>{\" \"}\r\n          <button className='submit-btn' onClick={() => setProfilePicture()}>\r\n            Set As Profile Picture\r\n          </button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SetAvatar;\r\n","export default __webpack_public_path__ + \"static/media/user.6f56382d.jpg\";","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport \"./Dashboard.css\";\r\nimport avatar from \"../../assets/user.jpg\";\r\nimport { Button } from \"@mui/material\";\r\nimport {\r\n  deleteUserRoute,\r\n  setAvatarRoute,\r\n  updateUserRoute,\r\n} from \"../../utils/routes\";\r\nimport LogOut from \"../LogOut/LogOut\";\r\n\r\nfunction Dashboard({ setNotice }) {\r\n  const [currentUser, setCurrentUser] = useState(undefined);\r\n  const [error, setError] = useState(null);\r\n  const [message, setMessage] = useState();\r\n  const formRef = useRef(null);\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const labelRef = useRef();\r\n  const usernameRef = useRef();\r\n\r\n  // State Management\r\n  const [values, setValues] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    phone: \"\",\r\n    oldPassword: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!JSON.parse(localStorage.getItem(\"chatUser\"))) {\r\n      navigate(\"/login\");\r\n    } else {\r\n      setCurrentUser(JSON.parse(localStorage.getItem(\"chatUser\")));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      labelRef.current.style.background = `url(${currentUser.avatarImage}) no-repeat center center`;\r\n      labelRef.current.style.backgroundSize = `cover`;\r\n    }\r\n  }, [currentUser]);\r\n\r\n  const setProfilePicture = async (profile) => {\r\n    const res = await fetch(setAvatarRoute, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        id: currentUser._id,\r\n        avatarImage: profile,\r\n      }),\r\n    });\r\n\r\n    const resData = await res.json();\r\n    if (resData.success) {\r\n      localStorage.setItem(\r\n        \"chatUser\",\r\n        JSON.stringify({ ...currentUser, avatarImage: resData.image })\r\n      );\r\n      setCurrentUser(JSON.parse(localStorage.getItem(\"chatUser\")));\r\n      setMessage(\"Image Set!\");\r\n    } else {\r\n      setError(\"Internal Server Error!\");\r\n    }\r\n  };\r\n\r\n  const handleFileChange = async (file) => {\r\n    let fileReader = new FileReader();\r\n    fileReader.onloadend = async function () {\r\n      let passportLabel = document.querySelector(\".passport-label\");\r\n      passportLabel.style.background = `url(${this.result}) no-repeat center center`;\r\n      passportLabel.style.backgroundSize = `cover`;\r\n      await setProfilePicture(this.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  };\r\n\r\n  const updateUser = async () => {\r\n    const data = {\r\n      username: values.username || currentUser.username,\r\n      firstname: values.firstname,\r\n      lastname: values.lastname,\r\n      phone: values.phone,\r\n    };\r\n\r\n    if (!usernameRef.current.value) {\r\n      setError(\"Username is Requierd!\");\r\n      return;\r\n    }\r\n    const res = await fetch(`${updateUserRoute}/${currentUser._id}`, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    const resData = await res.json();\r\n    if (resData.success) {\r\n      localStorage.setItem(\"chatUser\", JSON.stringify(resData.user));\r\n      setCurrentUser(JSON.parse(localStorage.getItem(\"chatUser\")));\r\n      setMessage(\"Data updated successfully!\");\r\n    } else {\r\n      setError(\"Internal Server Error!\");\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const updateUserPassword = async () => {\r\n    setError();\r\n    setMessage();\r\n    const { oldPassword, password, confirmPassword } = values;\r\n\r\n    if (!oldPassword) {\r\n      setError(\"Enter old password\");\r\n      return;\r\n    }\r\n    if (!password) {\r\n      setError(\"Enter New password\");\r\n      return;\r\n    }\r\n    if (!confirmPassword) {\r\n      setError(\"Enter Confirm password\");\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      setError(\"Enter Passwords does not match\");\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      userId: currentUser._id,\r\n      oldPassword,\r\n      password,\r\n      confirmPassword,\r\n    };\r\n\r\n    const res = await fetch(`${updateUserRoute}/${currentUser._id}`, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    const resData = await res.json();\r\n    if (resData.success) {\r\n      localStorage.setItem(\"chatUser\", JSON.stringify(resData.user));\r\n      setCurrentUser(JSON.parse(localStorage.getItem(\"chatUser\")));\r\n      setMessage(\"Password updated successfully!\");\r\n      setError();\r\n    } else {\r\n      setError(resData.message);\r\n    }\r\n  };\r\n\r\n  const deleteUser = async () => {\r\n    if (window.confirm(\"Are you sure you want to delete your account?\")) {\r\n      const res = await fetch(`${deleteUserRoute}/${currentUser._id}`, {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      });\r\n      const resData = await res.json();\r\n      if (resData.success) {\r\n        setNotice(resData.message);\r\n        localStorage.removeItem(\"chatUser\");\r\n        navigate(\"/login\");\r\n      } else {\r\n        setError(resData.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='dashboard'>\r\n      <div className='log-out-wrapper'>\r\n        <Button variant='contained' color='secondary'>\r\n          <Link to={\"/\"}>Back to Chat</Link>\r\n        </Button>\r\n        <LogOut title='Log Out' />\r\n      </div>\r\n      <div className='dashboard-content-wrapper'>\r\n        <h2>Welcome {currentUser?.username}, to your dashborad</h2>\r\n\r\n        {message && <p className='success'>{message}</p>}\r\n        {error && <p className='error'>{error}</p>}\r\n        {currentUser && (\r\n          <div className='dashboard-form' ref={formRef}>\r\n            <div className='passport-container'>\r\n              <label\r\n                className='passport-label'\r\n                htmlFor='passport'\r\n                ref={labelRef}\r\n              >\r\n                <input\r\n                  type='file'\r\n                  name='profile'\r\n                  id='passport'\r\n                  accept='image/*'\r\n                  onChange={(e) => handleFileChange(e.target.files[0])}\r\n                />\r\n              </label>\r\n            </div>\r\n            <h3>Edit Details</h3>\r\n            <div className='wrapper'>\r\n              <div className='form-group'>\r\n                <input\r\n                  type='email'\r\n                  name='email'\r\n                  placeholder='Email'\r\n                  autoComplete='off'\r\n                  value={currentUser.email}\r\n                  disabled\r\n                  readOnly\r\n                />\r\n              </div>\r\n\r\n              <div className='form-group'>\r\n                <input\r\n                  type='text'\r\n                  name='username'\r\n                  placeholder='User Name'\r\n                  defaultValue={currentUser.username}\r\n                  autoComplete='off'\r\n                  onChange={(e) => handleInputChange(e)}\r\n                  ref={usernameRef}\r\n                />\r\n              </div>\r\n              {/*  */}\r\n\r\n              <div className='form-group'>\r\n                <input\r\n                  type='text'\r\n                  name='firstname'\r\n                  placeholder='First Name'\r\n                  autoComplete='off'\r\n                  defaultValue={currentUser.firstname}\r\n                  onChange={(e) => handleInputChange(e)}\r\n                />\r\n              </div>\r\n              <div className='form-group'>\r\n                <input\r\n                  type='text'\r\n                  name='lastname'\r\n                  placeholder='Last Name'\r\n                  autoComplete='off'\r\n                  defaultValue={currentUser.lastname}\r\n                  onChange={(e) => handleInputChange(e)}\r\n                />\r\n              </div>\r\n              <div className='form-group'>\r\n                <input\r\n                  type='tel'\r\n                  name='phone'\r\n                  placeholder='Phone'\r\n                  autoComplete='off'\r\n                  defaultValue={currentUser.phone}\r\n                  onChange={(e) => handleInputChange(e)}\r\n                />\r\n              </div>\r\n              <div className='btn-group'>\r\n                <Button\r\n                  variant='contained'\r\n                  color='primary'\r\n                  fullWidth={true}\r\n                  onClick={() => updateUser()}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </div>\r\n\r\n              <h4>Old Password</h4>\r\n              <div className='form-group'>\r\n                <input\r\n                  type='password'\r\n                  name='oldPassword'\r\n                  placeholder='Old Password'\r\n                  onChange={(e) => handleInputChange(e)}\r\n                />\r\n              </div>\r\n\r\n              <h4>New Password</h4>\r\n              <div className='form-group'>\r\n                <input\r\n                  type='password'\r\n                  name='password'\r\n                  placeholder='New Password'\r\n                  onChange={(e) => handleInputChange(e)}\r\n                />\r\n              </div>\r\n\r\n              <div className='form-group'>\r\n                <input\r\n                  type='password'\r\n                  name='confirmPassword'\r\n                  placeholder='Confirm Password'\r\n                  onChange={(e) => handleInputChange(e)}\r\n                />\r\n              </div>\r\n\r\n              <div className='btn-group'>\r\n                <Button\r\n                  variant='contained'\r\n                  color='primary'\r\n                  fullWidth={true}\r\n                  onClick={() => updateUserPassword()}\r\n                >\r\n                  Change Password\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <Button\r\n          onClick={() => deleteUser()}\r\n          style={{\r\n            position: \"fixed\",\r\n            backgroundColor: \"red\",\r\n            color: \"white\",\r\n            fontSize: 15,\r\n          }}\r\n        >\r\n          Delete Account\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n\r\nconst Container = styled.div`\r\n  background-color: white;\r\n`;\r\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n  Link,\n  HashRouter,\n} from \"react-router-dom\";\nimport Register from \"./pages/Register/Register\";\nimport Login from \"./pages/Login/Login\";\nimport Chat from \"./pages/Chat/Chat\";\nimport SetAvata from \"./pages/Avatar/SetAvatar\";\n// import { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\n\nfunction App() {\n  const [notice, setNotice] = useState(undefined);\n  return (\n    <>\n      {/* <div className='video-container' ref={videoRef}></div> */}\n\n      <HashRouter>\n        <Routes>\n          <Route path='/' element={<Chat />} />\n          <Route path='/register' element={<Register />} />\n          <Route\n            path='/login'\n            element={<Login notice={notice} setNotice={setNotice} />}\n          />\n          <Route path='/avatar' element={<SetAvata />} />\n          <Route\n            path='/dashboard'\n            element={<Dashboard setNotice={setNotice} />}\n          />\n          <Route\n            path='*'\n            element={\n              <div className='not-found'>\n                <h2> Page Not Found!</h2>\n                <Link to={\"/login\"}>Log In</Link>\n              </div>\n            }\n          />\n        </Routes>\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}